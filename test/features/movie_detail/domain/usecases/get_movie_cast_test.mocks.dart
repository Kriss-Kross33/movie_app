// Mocks generated by Mockito 5.4.1 from annotations
// in movie_app/test/features/movie_detail/domain/usecases/get_movie_cast_test.dart.
// Do not manually edit this file.

// @dart=2.19

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movie_app/src/core/core.dart' as _i5;
import 'package:movie_app/src/features/movie_detail/domain/entities/entities.dart'
    as _i6;
import 'package:movie_app/src/features/movie_detail/domain/repositories/movie_detail_repositories.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MovieDetailRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieDetailRepository extends _i1.Mock
    implements _i3.MovieDetailRepository {
  MockMovieDetailRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.MovieDetailEntity>> getMovieDetail(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetail,
          [id],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.MovieDetailEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.MovieDetailEntity>(
          this,
          Invocation.method(
            #getMovieDetail,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.MovieDetailEntity>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.MovieCastEntity>>> getMovieCast(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieCast,
          [id],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.Failure, List<_i6.MovieCastEntity>>>.value(
            _FakeEither_0<_i5.Failure, List<_i6.MovieCastEntity>>(
          this,
          Invocation.method(
            #getMovieCast,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.MovieCastEntity>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.MovieVideoEntity>?>>
      getMovieVideos(int? id) => (super.noSuchMethod(
            Invocation.method(
              #getMovieVideos,
              [id],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, List<_i6.MovieVideoEntity>?>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.MovieVideoEntity>?>(
              this,
              Invocation.method(
                #getMovieVideos,
                [id],
              ),
            )),
          ) as _i4
              .Future<_i2.Either<_i5.Failure, List<_i6.MovieVideoEntity>?>>);
}
