// Mocks generated by Mockito 5.4.0 from annotations
// in movie_app/test/common/movie/data/repositories/movie_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:movie_app/src/common/movie/data/data.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i2.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i2.MovieModel>> getTrending() => (super.noSuchMethod(
        Invocation.method(
          #getTrending,
          [],
        ),
        returnValue: _i3.Future<List<_i2.MovieModel>>.value(<_i2.MovieModel>[]),
      ) as _i3.Future<List<_i2.MovieModel>>);
  @override
  _i3.Future<List<_i2.MovieModel>> getPopular() => (super.noSuchMethod(
        Invocation.method(
          #getPopular,
          [],
        ),
        returnValue: _i3.Future<List<_i2.MovieModel>>.value(<_i2.MovieModel>[]),
      ) as _i3.Future<List<_i2.MovieModel>>);
  @override
  _i3.Future<List<_i2.MovieModel>> getPlayingNow() => (super.noSuchMethod(
        Invocation.method(
          #getPlayingNow,
          [],
        ),
        returnValue: _i3.Future<List<_i2.MovieModel>>.value(<_i2.MovieModel>[]),
      ) as _i3.Future<List<_i2.MovieModel>>);
  @override
  _i3.Future<List<_i2.MovieModel>> getComingSoon() => (super.noSuchMethod(
        Invocation.method(
          #getComingSoon,
          [],
        ),
        returnValue: _i3.Future<List<_i2.MovieModel>>.value(<_i2.MovieModel>[]),
      ) as _i3.Future<List<_i2.MovieModel>>);
}
